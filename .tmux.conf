# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 0

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

set-option -g default-terminal screen-256color
set-option -g display-time 4000
set-option -g focus-events on

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-layout
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v

# smart pane switching with awareness of vim splits
bind = next-layout \; previous-layout
bind - resize-pane -D 10
bind + resize-pane -U 10
bind -n C-h resize-pane -L 25
# bind -n C-j select-pane -t :.+
# bind -n C-k select-pane -t :.-
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$|(^|\/)ssh$' && tmux send-keys C-l) || tmux resize-pane -R 25"

bind -n C-space resize-pane -Z
# Setup 'v' to begin selection as in Vim 
set-window-option -g display-panes-time 1500

# Status Bar
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'
set-option -g status-fg "#004000"

# Status Bar solarized-dark (default)
set-option -g status-bg "#000000"

# Status Bar solarized-light
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"

# Set window notifications
# setw -g monitor-activity on
set -g visual-activity on
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 3" | bc) -eq 1 ]' \
	'setw -g window-status-current-fg "#006000"' \
	'setw -g window-status-current-style fg="#006000",bg="#000000"'

# if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 3" | bc) -eq 1 ]' \
	# 'setw -g window-status-activity-bg "#006000" \; setw -g window-status-activity-fg "#000000"' \
	# 'setw -g window-status-activity-style fg="#000000",bg="#006000"'

setw -g aggressive-resize on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
# set -g terminal-overrides "screen.xterm-new"

set -g default-terminal "xterm-256color"
set -as terminal-overrides ',xterm*:sitm=\E[3m'
# set -g status off

# select-layout main-vertical -t .

# Allow the arrow key to be used immediately after changing windows
# set-option -g repeat-time 0
set-option -g mouse on
bind P paste-buffer
if-shell '[ -n "$ITERM_SESSION_ID" ]' 'set-option -g set-clipboard on'
if-shell '[ -z "$ITERM_SESSION_ID" ]' 'set-option -g set-clipboard off'
set -g history-limit 100000
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# set -g status-right "#[fg=green]#(cat /sys/class/power_supply/BAT?/capacity)%% | %R"
set -g status-right ""
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xcut'
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xcut'
set -g pane-active-border-style "fg=green"
set -g pane-border-style "fg=green"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -t :.+"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -t :.-"

