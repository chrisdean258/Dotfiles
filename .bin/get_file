#!/usr/bin/env python3
import imaplib
import email
import os
import getpass
import re
import sys
import argparse
import glob

""" This module should extract the labs from your email.
    It saves submissions in the directory submissions.
    It saves Meta-data in meta-data
"""

# do the login
def auth(user,password,imap_url, imap_port):
    con = imaplib.IMAP4_SSL(imap_url, imap_port)
    con.login(user,password)
    return con
# extracts the body from the email
def get_body(msg):
    if msg.is_multipart():
        return get_body(msg.get_payload(0))
    else:
        return msg.get_payload(None,True)

# allows you to download attachments
def get_attachments(msg, fn):
    for part in msg.walk():
        if part.get_content_maintype()=='multipart':
            continue
        if part.get('Content-Disposition') is None:
            continue
        fileName = part.get_filename()

        if fn != fileName:
            return False

        real_file_name = fileName
        i = 1
        while os.path.exists(real_file_name):
            real_file_name = "{fileName} ({i})".format(**locals())
            i += 1

        with open(real_file_name,'wb') as f:
            f.write(part.get_payload(decode=True))

        return True

#search for a particular email
def search(key,value,con):
    result, data  = con.search(None,key,'"{}"'.format(value))
    return data
#extracts emails from byte array
def get_emails(con, result_bytes):
    msgs = []
    for num in result_bytes[0].split():
        typ, data = con.fetch(num, '(RFC822)')
        msgs.append(data)
    return msgs

def get_mail(con, num):
    typ, data = con.fetch(num, '(RFC822)')
    mail = email.message_from_bytes(data[0][1])
    body = get_body(mail).decode('utf-8').replace("\r\n","\n")
    return (mail, body)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("files", nargs='+', type=str, help="File to download")
    parser.add_argument("--lab-number", "-l", type=str, help="lab number")
    parser.add_argument("--email", "-e", type=str, help="email adress")
    parser.add_argument("--imap-url", "-i", type=str, help="imap url", default="imap.gmail.com")
    parser.add_argument("--imap-port", "-p", type=int, help="imap port", default=993)

    args = parser.parse_args()
    args = vars(args)
    user = args["email"] or os.environ.get("email") or input("email: ")

    imap_url = args["imap_url"]
    imap_port = args["imap_port"]

    files = args["files"]

    password = os.environ.get("email_") or getpass.getpass()
    try:
        con = auth(user,password,imap_url, imap_port)
    except Exception as e:
        print(str(e))
        sys.exit(1)

    con.select('INBOX')

    for f in files:
        data = search('Subject', f, con)
        for num in data[0].split():
            mail, body = get_mail(con, num)
            if get_attachments(mail, f):
                print("Recieving", f)
                break


if __name__ == "__main__":
    main()
