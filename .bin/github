#!/usr/bin/env python3

import requests
import getpass
import json
import subprocess
import functools
import re
import os

def sh(*args, **kwargs):
    kwargs["shell"] = kwargs.get("shell", True)
    kwargs["universal_newlines"] = kwargs.get("universal_newlines", True)
    return subprocess.check_output(*args, **kwargs)

BASE_URL = "https://api.github.com/"
try:
    USER = sh("git config user.username")
except:
    email = sh("git config user.email")
    USER = email[:email.index("@")]

def usage(*args):
    print("Usage: github list|ls|delete-repo|new_repo [repo]")

def auth_request(method, url=None):
    def internal(func):
        @functools.wraps(func)
        def cbl(*args, **kwargs):
            nonlocal func
            nonlocal url
            nonlocal method
            running = func(*args, **kwargs)
            if url is None: url = next(running)
            response = method(BASE_URL + url, json = next(running), auth=(USER, getpass.getpass()))
            if response.status_code // 100 != 2:
                print(f"status code = {response.status_code}\n{response.text}")
            if response.text:
                try:
                    running.send(json.loads(response.text))
                except StopIteration:
                    pass

        return cbl
    return internal

@auth_request(requests.get, "user/repos")
def list_repos():
    response = yield
    for repo in response:
        print(repo["full_name"])

@auth_request(requests.post, "user/repos")
def new_repo(*args):
    names = [ a for a in args if not a.startswith("-") ]
    name = names[0]
    dirname = names[-1]
    data = { "name": name[0], "private": ("-p" in args or "--private" in args) }
    response = yield data
    print(f"Name: {response['name']}\nFull Name: {response['full_name']}")

    os.mkdir(dirname)
    os.chdir(dirname)

    with open("README.md", "w") as f:
        f.write(f"# {name}")
    open(".gitignore").close()

    sh("git init")
    sh(f'git remote add origin "git@github.com:{USER}/{name}.git"')
    sh("git add -A .")
    sh('git commit -m "Initial Commit"')
    sh("git push -u origin master")

    os.chdir("..")

@auth_request(requests.delete)
def delete_repo(*args):
    yield f"repos/{USER}/{args[-1]}"
    yield

def main(argv):
    {
        "delete": delete_repo,
        "new-repo": new_repo,
        "list": list_repos,
        "ls": list_repos
        }.get(argv[1], usage)(*argv[2:])


if __name__ == "__main__":
    import sys
    main(sys.argv)


