#!/usr/bin/env python3

import requests
import getpass
import json
import subprocess
import functools
from decorator import decorator


BASE_URL = "https://api.github.com/"

def call(*args, **kwargs):
    kwargs["shell"] = kwargs.get("shell", True)
    kwargs["universal_newlines"] = kwargs.get("universal_newlines", True)
    return subprocess.check_output(*args, **kwargs)

def authenticate():
    try:
        user = call("git config user.username")
    except:
        email = call("git config user.email")
        user = email[:email.index("@")]

    pwd = getpass.getpass()
    return (user, pwd)

def auth_request(method, url):
    def internal(func):
        @functools.wraps(func)
        def cbl(*args, **kwargs):
            nonlocal func
            nonlocal url
            nonlocal method
            running = func(*args, **kwargs)
            response = method(BASE_URL + url, data = next(running), auth=authenticate())
            if response.status_code // 100 != 2:
                print(f"status code = {response.status_code}")
                return
            try:
                running.send(json.loads(response.text))
            except StopIteration:
                pass
        return cbl
    return internal

@auth_request(requests.get, "user/repos")
def list_repos():
    response = yield
    for repo in response:
        print(repo["full_name"])


def main():
    list_repos()

if __name__ == "__main__":
    main()


