#!/usr/bin/env python3

import base64
import sys
from Crypto.Cipher import AES
from Crypto.Hash import SHA256


def decrypt(key, source, decode=True):
    if decode:
        source = base64.b64decode(source)
    # use SHA-256 over our key to get a proper-sized AES key
    key = SHA256.new(key).digest()
    IV = source[:AES.block_size]  # extract the IV from the beginning
    decryptor = AES.new(key, AES.MODE_CBC, IV)
    data = decryptor.decrypt(source[AES.block_size:])  # decrypt
    padding = data[-1]
    if data[-padding:] != bytes([padding]) * padding:
        raise ValueError("Invalid padding...")
    return data[:-padding]  # remove the padding


with open(sys.argv[2], "rb") as f:
    data = decrypt(sys.argv[1].encode("utf-8"), f.read())

with open(sys.argv[3], "wb") as f:
    f.write(data)
