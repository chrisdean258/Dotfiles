#!/usr/bin/env python3

import sys
import os
import json
import datetime
from sh import git


def usage():
    print("Usage: track-time", file=sys.stderr)
    sys.exit(1)


def time():
    now = datetime.datetime.now()
    hour, _, minute = input("End time: ").partition(":")
    hour = int(hour)
    minute = int(minute or 0)

    day_offset = 0
    if "-o" in sys.argv:
        day_offset = -int(input("Days ago: ") or 0)
    end_time = now + datetime.timedelta(days=day_offset)
    end_time = end_time.replace(hour=hour, minute=minute)
    return end_time.strftime("%Y-%m-%d %H:%M")


def print_event(event):
    print("From", event["begin_time"], "to", event["end_time"])
    print(event["category"])
    if event["category"] != event["activity"]:
        print(event["activity"])
    if event["people"]:
        print("With", ", ".join(event["people"]))


def category():
    categories = [
        "Sleep",
        "Shower",
        "Travel",
        "TV",
        "Research",
        "Coding",
        "Video Games",
        "Food",
        "Friends",
        "Reddit",
        "Youtube",
        "Shopping"
        ]
    print("\n".join(f"{i}. {s}" for i, s in enumerate(categories)))
    choice = input("Choose categories: ")
    cat = categories[int(choice)] if choice else "Misc"

    if cat in {"Sleep", "Shower", "Reddit"}:
        activity = cat
    else:
        activity = input("Activity: ") or cat

    people = []
    while cat not in {"Sleep", "Shower", "Reddit", "Youtube"}:
        person = input("Person: ").strip().title()
        if not person:
            break
        people.append(person)

    people = list(sorted(list(set(people))))
    return (cat, activity, people)


def main():
    HOME = os.environ["HOME"]
    os.chdir(HOME + "/git/personal_notes")
    with open("time_tracking.json", "r") as f:
        items = json.load(f)

    if len(items) == 0:
        new_entry = {}
        new_entry["end_time"] = "2020-01-01 00:00"
        new_entry["category"] = "N/A"
        new_entry["activity"] = "2019"
        items.append(new_entry)

    last_entry = items[-1]
    print_event(last_entry)
    new_entry = {}
    new_entry["begin_time"] = last_entry["end_time"]
    new_entry["end_time"] = time()
    new_entry["location"] = input("Location: ") or last_entry["location"]
    cat, activity, people = category()
    new_entry["category"] = cat
    new_entry["activity"] = activity
    new_entry["people"] = people

    items.append(new_entry)
    print_event(new_entry)

    with open("time_tracking.json", "w") as f:
        json.dump(items, f)

    if "-p" in sys.argv:
        git.add("time_tracking.json")
        git.commit(m="time tracking update")
        git.push()


if __name__ == "__main__":
    main()
