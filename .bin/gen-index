#!/usr/bin/env python3

import os
import sys
from itertools import dropwhile
from itertools import takewhile


def file_lines_or_default(filename):
    try:
        with open(filename) as f:
            lines = f.read().splitlines()
    except FileNotFoundError:
        return [], [], False
    before = list(takewhile(lambda l: l.lower() != "# index", lines))
    after = list(dropwhile(lambda l: not l.startswith("#"), lines[len(before) + 1:]))  # noqa
    return before, after, "# INDEX" in lines


def index_lines(directory, full, path_prefix, indent):
    lines = []
    for f in sorted(os.listdir(directory)):
        path = os.path.join(directory, f)
        basename, ext = os.path.splitext(f)
        pretty_path = os.path.join(path_prefix, f)
        if f.startswith('.') or "sync-conflict" in f or f.endswith("index.md"):
            continue
        elif os.path.isdir(path):
            lines.append(indent + f"[{f}]({pretty_path}/index.md)")
            if full:
                lines += index_lines(path, full, pretty_path, "  " + indent)
        elif ext == ".md":
            with open(path, "r") as ff:
                title = ff.readline().strip().partition(' ')[2]
            if not title.strip():
                title = basename.replace("-", " ")
            lines.append(indent + f"[{title}]({pretty_path})")
        elif ext not in (".jpg", ".png"):
            lines.append(indent + f"[{f}]({pretty_path})")
    return lines


def generate_index_for_dir(path):
    filepath = os.path.join(path, "index.md")
    before, after, full = file_lines_or_default(filepath)
    index = ["# INDEX" if full else "# Index", ""]
    index += index_lines(path, full, ".", "- ") + [""]
    with open(filepath, "w") as f:
        f.write("\n".join(before + index + after))


def main():
    for root, dirs, files in os.walk(".", followlinks=True):
        for d in (d for d in dirs if not d.startswith(".")):
            generate_index_for_dir(os.path.join(root, d))
    generate_index_for_dir(os.path.join("."))


if __name__ == "__main__":
    if len(sys.argv) == 2:
        os.chdir(sys.argv[1])
    main()
