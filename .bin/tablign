#!/usr/bin/env python3
import sys
from itertools import count

"""
Prints out file as a table
"""


def common_indent(lines):
    common = ""
    for i in count():
        s = set(line[i:i+1] for line in lines)
        if len(s) != 1:
            return common
        ch = s.pop()
        if ch == "" or not ch.isspace():
            return common
        common += ch


def tablign(string, seperator=" "):
    lines = string.splitlines()
    indent = common_indent(lines)
    lines = [line[len(indent):].split(seperator) for line in lines]
    sizes = [0] * max(len(line) for line in lines)

    for line in lines:
        for i, field in enumerate(line):
            sizes[i] = max(sizes[i], len(field))
    lines = [seperator.join(s.ljust(l)
                            for s, l in zip(line, sizes)) for line in lines]
    return indent + ("\n" + indent).join(lines)


def usage(msg=None):
    print("Usage: tablign [-s align-on] [file]", file=sys.stderr)
    if msg is not None:
        print(msg)
    sys.exit(1)


def main():
    i = 1
    sep = " "
    file = sys.stdin
    try:
        while i < len(sys.argv):
            if sys.argv[i] == "-s":
                i += 1
                sep = sys.argv[i]
            elif sys.argv[i].startswith("-"):
                raise Exception(f"Unidentified flag {sys.argv[i]}")
            elif file is sys.stdin:
                file = open(sys.argv[i], "r")
            else:
                raise Exception(f"Unexpected argument {sys.argv[i]}")
            i += 1
    except IndexError:
        usage()
    except Exception as e:
        usage(str(e))

    print(tablign(file.read(), sep))
    return 0


if __name__ == "__main__":
    sys.exit(main())
