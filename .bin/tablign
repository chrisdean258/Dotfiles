#!/usr/bin/env python3
import argparse
import csv
import fileinput
import sys


def tablign(lines, sep, joiner, is_csv, header):
    if len(lines) >= 2 and lines[1].startswith("-"):
        del lines[1]
        header = True
    if is_csv:
        lines = list(csv.reader(lines, delimiter=sep))
    elif sep is None:
        if "|" in lines[0]:
            sep = "|"
            joiner = "|"
        lines = [line.split(sep) for line in lines]
    else:
        lines = [line.split(sep) for line in lines]
    sizes = [0] * max(len(line) for line in lines)
    for line in lines:
        for i, field in enumerate(line):
            sizes[i] = max(sizes[i], len(field))
    lines = [joiner.join(s.ljust(l) for s, l in zip(line, sizes))
             for line in lines]
    if header:
        lines = lines[0:1] + ["-" * len(lines[0])] + lines[1:]
    return "\n".join(lines)


def main():
    parser = argparse.ArgumentParser(description='Print file as a table')
    parser.add_argument("file", nargs="*")
    parser.add_argument("-s", "--sep", default=None, help="What to split the file on")  # noqa
    parser.add_argument("-j", "--joiner", default=" ", help="What to join the file on")  # noqa
    parser.add_argument("-c", "--csv", action="store_true", help="correctly parses csv files and uses ' | ' as table delimiter")  # noqa
    parser.add_argument("--header", action="store_true", help="first line is a header")  # noqa
    args = parser.parse_args()
    if args.csv and args.sep is None:
        args.sep = ","
    lines = [f.strip("\r\n") for f in fileinput.input(args.file)]
    print(tablign(lines, args.sep, args.joiner, args.csv, args.header))

    return 0


if __name__ == "__main__":
    sys.exit(main())
