#!/usr/bin/env python3
from xonsh.prompt.__amalgam__ import git_dirty_working_directory as gdwd
from xonsh.prompt.__amalgam__ import current_branch as gcb
from shlex import split
from types import SimpleNamespace
import os
import sys
import re

xontrib load apt_tabcomplete autojump

$XONSH_SHOW_TRACEBACK = False
$HOME = $PWD

if 'SSH_TTY' in ${...}:
    $PROMPT = '{RED}{rv:[{}] }{NO_COLOR}{env_name}{BOLD_GREEN}{user}@{hostname}{NO_COLOR}:{BOLD_BLUE}{cwd}{GREEN}{curr_branch: ({})}{NO_COLOR}{prompt_end} '
else:
    $PROMPT = '{RED}{rv:[{}] }{NO_COLOR}{env_name}{BOLD_GREEN}{user}{NO_COLOR}:{BOLD_BLUE}{cwd}{GREEN}{curr_branch: ({})}{NO_COLOR}{prompt_end} '

prompt_save = $PROMPT
$PROMPT_FIELDS["rv"] = lambda: __xonsh__.history and __xonsh__.history.rtns[-1] or None
$PROMPT_FIELDS['curr_branch'] = lambda: gcb() and (gcb() + "*" * (gdwd() or 0))

@events.on_transform_command
def bash_preproc(cmd, **kw):
    bang_previous = {
        "!": lambda x: x,
        "$": lambda x: split(x)[-1],
        "^": lambda x: split(x)[0],
        "*": lambda x: " ".join(split(x)[1:]),
    }
    inputs = [a["inp"] for a in __xonsh__.history.all_items()][::-1]
    special = lambda m: bang_previous[m.group(1)](next((x for x in inputs), ""))
    word = lambda m: next((x for x in inputs if x.startswith(m.group(1))), "")
    cmd = re.sub(r"!([!$^*])", special, cmd)
    return re.sub(r"!([\w]+)", word, cmd)


def alias(arg):
    for a in arg:
        name, _, alias = a.partition("=")
        aliases[name] = eval(alias)


aliases["alias"] = alias
aliases[".."] = ["cd", ".."]
aliases["-"] = ["cd", "-"]
aliases["ee"] = ["exec", "xonsh"]

alias la="ls -la"
